// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using redimel_server.Data;

#nullable disable

namespace redimel_server.Migrations
{
    [DbContext(typeof(RedimelServerDbContext))]
    [Migration("20230910100519_AddingNewAbilitiesAndHeroTypeProperty")]
    partial class AddingNewAbilitiesAndHeroTypeProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("redimel_server.Models.Domain.Ability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Acrobatics")
                        .HasColumnType("bit");

                    b.Property<bool>("Archery")
                        .HasColumnType("bit");

                    b.Property<bool>("BreakingLocks")
                        .HasColumnType("bit");

                    b.Property<bool>("Climbing")
                        .HasColumnType("bit");

                    b.Property<bool>("Diplomacy")
                        .HasColumnType("bit");

                    b.Property<bool>("DoubleStrike")
                        .HasColumnType("bit");

                    b.Property<bool>("Elusion")
                        .HasColumnType("bit");

                    b.Property<bool>("Guile")
                        .HasColumnType("bit");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("KickFight")
                        .HasColumnType("bit");

                    b.Property<bool>("Leadership")
                        .HasColumnType("bit");

                    b.Property<bool>("Melee")
                        .HasColumnType("bit");

                    b.Property<bool>("NatureSkills")
                        .HasColumnType("bit");

                    b.Property<bool>("Observation")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisonousNeedles")
                        .HasColumnType("bit");

                    b.Property<bool>("Rituals")
                        .HasColumnType("bit");

                    b.Property<bool>("SecretKnowledge")
                        .HasColumnType("bit");

                    b.Property<bool>("ShieldBearer")
                        .HasColumnType("bit");

                    b.Property<bool>("Skill")
                        .HasColumnType("bit");

                    b.Property<bool>("Sneak")
                        .HasColumnType("bit");

                    b.Property<bool>("Spells")
                        .HasColumnType("bit");

                    b.Property<bool>("Stimulants")
                        .HasColumnType("bit");

                    b.Property<bool>("Survival")
                        .HasColumnType("bit");

                    b.Property<bool>("ThrowingKnives")
                        .HasColumnType("bit");

                    b.Property<bool>("Transformation")
                        .HasColumnType("bit");

                    b.Property<bool>("Traps")
                        .HasColumnType("bit");

                    b.Property<bool>("WaterCycle")
                        .HasColumnType("bit");

                    b.Property<bool>("Wrestling")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.AditionalPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cover")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImportantInformation")
                        .HasColumnType("int");

                    b.Property<int>("Morals")
                        .HasColumnType("int");

                    b.Property<int>("SlainMonsters")
                        .HasColumnType("int");

                    b.Property<int>("TeamGame")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Armor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArmorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Baggage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Baggages");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.BattleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("BattleGroups");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Choice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextPage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArmorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Knife")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicPack")
                        .HasColumnType("bit");

                    b.Property<int>("MoneyBag")
                        .HasColumnType("int");

                    b.Property<bool>("Poison")
                        .HasColumnType("bit");

                    b.Property<Guid>("ShieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SmokeBall")
                        .HasColumnType("bit");

                    b.Property<Guid>("ThrowingWeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("ShieldId");

                    b.HasIndex("ThrowingWeaponId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActualMission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("GroupWests");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BaggageCapacity")
                        .HasColumnType("float");

                    b.Property<Guid>("EquipmentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HeroClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeroType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndicatorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderOfBattle")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("EquipmentsId");

                    b.HasIndex("GroupWestId");

                    b.HasIndex("IndicatorsId");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Indicator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Endurance")
                        .HasColumnType("int");

                    b.Property<int>("Evasion")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("MentalStrength")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Indicators");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsItDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupWestId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.NatureSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("NatureSkills");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Negotiation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("Negotiations");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Page", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Promise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsItDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Promises");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ritual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Rituals");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Shield", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<string>("ShieldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shields");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialCombatSkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UltimateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialCombatSkillId");

                    b.HasIndex("UltimateId");

                    b.ToTable("SpecialAbilities");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialCombatSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SpecialCombatSkills");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Spell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Talisman", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BonusIndicator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BonusPoints")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalismanType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Talismans");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.ThrowingWeapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ThrowingWeaponRange")
                        .HasColumnType("int");

                    b.Property<string>("ThrowingWeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThrowingWeapons");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ultimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Ultimates");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Checkpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentUserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TimeCounter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupWestId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItTwoHandWeapon")
                        .HasColumnType("bit");

                    b.Property<int>("WeaponRange")
                        .HasColumnType("int");

                    b.Property<string>("WeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.WorldInfoVariable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActiveOrNot")
                        .HasColumnType("bit");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedimelLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrueOrFalse")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorldInfoVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Baggage", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Hero", "Hero")
                        .WithMany("Baggages")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.BattleGroup", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany("BattleGroups")
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Choice", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Page", "Page")
                        .WithMany("Choices")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Armor", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Shield", "Shield")
                        .WithMany()
                        .HasForeignKey("ShieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.ThrowingWeapon", "ThrowingWeapon")
                        .WithMany()
                        .HasForeignKey("ThrowingWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armor");

                    b.Navigation("Shield");

                    b.Navigation("ThrowingWeapon");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany()
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Equipment", "Equipments")
                        .WithMany()
                        .HasForeignKey("EquipmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany("Heroes")
                        .HasForeignKey("GroupWestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Indicator", "Indicators")
                        .WithMany()
                        .HasForeignKey("IndicatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany()
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Equipments");

                    b.Navigation("GroupWest");

                    b.Navigation("Indicators");

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Mission", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany("Missions")
                        .HasForeignKey("GroupWestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupWest");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.NatureSkill", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("NatureSkills")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Negotiation", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany("Negotiations")
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Promise", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Hero", "Hero")
                        .WithMany("Promises")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ritual", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("Rituals")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialCombatSkill", "SpecialCombatSkill")
                        .WithMany()
                        .HasForeignKey("SpecialCombatSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Ultimate", "Ultimate")
                        .WithMany()
                        .HasForeignKey("UltimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialCombatSkill");

                    b.Navigation("Ultimate");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Spell", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("Spells")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Talisman", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Equipment", "Equipment")
                        .WithMany("Talismans")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.User", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany()
                        .HasForeignKey("GroupWestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupWest");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.WorldInfoVariable", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.User", "User")
                        .WithMany("WorldInfoVariables")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.AditionalPoint", b =>
                {
                    b.Navigation("BattleGroups");

                    b.Navigation("Negotiations");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.Navigation("Talismans");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.Navigation("Heroes");

                    b.Navigation("Missions");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.Navigation("Baggages");

                    b.Navigation("Promises");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Page", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.Navigation("NatureSkills");

                    b.Navigation("Rituals");

                    b.Navigation("Spells");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.User", b =>
                {
                    b.Navigation("WorldInfoVariables");
                });
#pragma warning restore 612, 618
        }
    }
}
