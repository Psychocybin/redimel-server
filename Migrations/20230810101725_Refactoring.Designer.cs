// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using redimel_server.Data;

#nullable disable

namespace redimel_server.Migrations
{
    [DbContext(typeof(RedimelServerDbContext))]
    [Migration("20230810101725_Refactoring")]
    partial class Refactoring
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("redimel_server.Models.Domain.Ability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Acrobatics")
                        .HasColumnType("bit");

                    b.Property<bool>("Archery")
                        .HasColumnType("bit");

                    b.Property<bool>("BreakingLocks")
                        .HasColumnType("bit");

                    b.Property<bool>("Climbing")
                        .HasColumnType("bit");

                    b.Property<bool>("Diplomacy")
                        .HasColumnType("bit");

                    b.Property<bool>("Elusion")
                        .HasColumnType("bit");

                    b.Property<bool>("Guile")
                        .HasColumnType("bit");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Melee")
                        .HasColumnType("bit");

                    b.Property<bool>("NatureSkills")
                        .HasColumnType("bit");

                    b.Property<bool>("Observation")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisonousNeedles")
                        .HasColumnType("bit");

                    b.Property<bool>("Rituals")
                        .HasColumnType("bit");

                    b.Property<bool>("SecretKnowledge")
                        .HasColumnType("bit");

                    b.Property<bool>("ShieldBearer")
                        .HasColumnType("bit");

                    b.Property<bool>("Skill")
                        .HasColumnType("bit");

                    b.Property<bool>("Sneak")
                        .HasColumnType("bit");

                    b.Property<bool>("Spells")
                        .HasColumnType("bit");

                    b.Property<bool>("Stimulants")
                        .HasColumnType("bit");

                    b.Property<bool>("Survival")
                        .HasColumnType("bit");

                    b.Property<bool>("ThrowingKnives")
                        .HasColumnType("bit");

                    b.Property<bool>("Transformation")
                        .HasColumnType("bit");

                    b.Property<bool>("Traps")
                        .HasColumnType("bit");

                    b.Property<bool>("WaterCycle")
                        .HasColumnType("bit");

                    b.Property<bool>("Wrestling")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Abilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd5a3e48-5eb4-49fa-a24d-3c3e861f22b3"),
                            Acrobatics = false,
                            Archery = false,
                            BreakingLocks = false,
                            Climbing = false,
                            Diplomacy = false,
                            Elusion = false,
                            Guile = false,
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            Melee = false,
                            NatureSkills = false,
                            Observation = false,
                            PoisonousNeedles = false,
                            Rituals = false,
                            SecretKnowledge = false,
                            ShieldBearer = false,
                            Skill = false,
                            Sneak = false,
                            Spells = false,
                            Stimulants = false,
                            Survival = false,
                            ThrowingKnives = false,
                            Transformation = false,
                            Traps = false,
                            WaterCycle = false,
                            Wrestling = true
                        },
                        new
                        {
                            Id = new Guid("0bd3e733-dcf3-40a3-8f90-e965a72687fd"),
                            Acrobatics = false,
                            Archery = true,
                            BreakingLocks = false,
                            Climbing = false,
                            Diplomacy = false,
                            Elusion = false,
                            Guile = false,
                            HeroId = new Guid("e1f39f3c-0fb5-40d4-84d1-b6a46c5c0568"),
                            Melee = false,
                            NatureSkills = false,
                            Observation = false,
                            PoisonousNeedles = false,
                            Rituals = false,
                            SecretKnowledge = false,
                            ShieldBearer = false,
                            Skill = false,
                            Sneak = false,
                            Spells = false,
                            Stimulants = false,
                            Survival = true,
                            ThrowingKnives = false,
                            Transformation = false,
                            Traps = false,
                            WaterCycle = false,
                            Wrestling = false
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.AditionalPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cover")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImportantInformation")
                        .HasColumnType("int");

                    b.Property<int>("Morals")
                        .HasColumnType("int");

                    b.Property<int>("SlainMonsters")
                        .HasColumnType("int");

                    b.Property<int>("TeamGame")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AditionalPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8db8e341-9d6e-42e8-8504-45b5f56eac5f"),
                            Cover = 2,
                            GroupWestId = new Guid("44a06217-58ec-4dce-bb7d-5a951e2bef9e"),
                            ImportantInformation = 0,
                            Morals = 2,
                            SlainMonsters = 0,
                            TeamGame = 0
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Armor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArmorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Armors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05bee6ad-3556-4d28-b537-ab3fed69ea26"),
                            ArmorType = "FullPlate",
                            Defence = 11,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = true
                        },
                        new
                        {
                            Id = new Guid("9eb3e847-03e3-428d-9f05-976e64465cb8"),
                            ArmorType = "WoodArmor",
                            Defence = 5,
                            EquipmentId = new Guid("6d6e49e8-84b4-4a11-b8f8-c1613e97479a"),
                            IsExist = true
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Baggage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Baggages");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.BattleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("BattleGroups");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Choice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextPage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArmorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Knife")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicPack")
                        .HasColumnType("bit");

                    b.Property<int>("MoneyBag")
                        .HasColumnType("int");

                    b.Property<bool>("Poison")
                        .HasColumnType("bit");

                    b.Property<Guid>("ShieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SmokeBall")
                        .HasColumnType("bit");

                    b.Property<Guid>("ThrowingWeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("ShieldId");

                    b.HasIndex("ThrowingWeaponId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            ArmorId = new Guid("05bee6ad-3556-4d28-b537-ab3fed69ea26"),
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            Knife = true,
                            MedicPack = true,
                            MoneyBag = 100,
                            Poison = false,
                            ShieldId = new Guid("e87042bf-50c0-4b73-adc5-1da34dfdcd5f"),
                            SmokeBall = true,
                            ThrowingWeaponId = new Guid("bcb17f68-b01e-484f-b757-7962129f95f6"),
                            WeaponId = new Guid("57006109-51e5-43e3-a8e0-8f3ece262649")
                        },
                        new
                        {
                            Id = new Guid("6d6e49e8-84b4-4a11-b8f8-c1613e97479a"),
                            ArmorId = new Guid("9eb3e847-03e3-428d-9f05-976e64465cb8"),
                            HeroId = new Guid("e1f39f3c-0fb5-40d4-84d1-b6a46c5c0568"),
                            Knife = true,
                            MedicPack = true,
                            MoneyBag = 100,
                            Poison = false,
                            ShieldId = new Guid("c5b0bd9c-7840-41b4-bb71-44ab2b883c7d"),
                            SmokeBall = false,
                            ThrowingWeaponId = new Guid("666c294d-c0d1-49d1-89a0-88abb3cf05fe"),
                            WeaponId = new Guid("b29503f6-4955-4512-a0d9-619f16127a80")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActualMission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("GroupWests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44a06217-58ec-4dce-bb7d-5a951e2bef9e"),
                            ActualMission = "",
                            AditionalPointsId = new Guid("8db8e341-9d6e-42e8-8504-45b5f56eac5f"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BaggageCapacity")
                        .HasColumnType("float");

                    b.Property<Guid>("EquipmentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HeroClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndicatorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderOfBattle")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("EquipmentsId");

                    b.HasIndex("GroupWestId");

                    b.HasIndex("IndicatorsId")
                        .IsUnique();

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Heroes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            AbilityId = new Guid("cd5a3e48-5eb4-49fa-a24d-3c3e861f22b3"),
                            BaggageCapacity = 60.0,
                            EquipmentsId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            GroupWestId = new Guid("44a06217-58ec-4dce-bb7d-5a951e2bef9e"),
                            HeroClass = "Barbarian",
                            IndicatorsId = new Guid("1aa43831-d5b0-4299-9585-a98c527ef9f8"),
                            Name = "Vranko",
                            OrderOfBattle = 0,
                            SpecialAbilityId = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0")
                        },
                        new
                        {
                            Id = new Guid("e1f39f3c-0fb5-40d4-84d1-b6a46c5c0568"),
                            AbilityId = new Guid("0bd3e733-dcf3-40a3-8f90-e965a72687fd"),
                            BaggageCapacity = 50.0,
                            EquipmentsId = new Guid("6d6e49e8-84b4-4a11-b8f8-c1613e97479a"),
                            GroupWestId = new Guid("44a06217-58ec-4dce-bb7d-5a951e2bef9e"),
                            HeroClass = "Hunter",
                            IndicatorsId = new Guid("697d4622-b4d9-4b71-85e8-a81bbcd7c0a4"),
                            Name = "TheLittleBear",
                            OrderOfBattle = 0,
                            SpecialAbilityId = new Guid("eb521bf8-1f0e-43da-bfaf-82750308b629")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Indicator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Endurance")
                        .HasColumnType("int");

                    b.Property<int>("Evasion")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("MentalStrength")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Indicators");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1aa43831-d5b0-4299-9585-a98c527ef9f8"),
                            Agility = 3,
                            Dexterity = 8,
                            Endurance = 6,
                            Evasion = 5,
                            Health = 70,
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            MentalEnergy = 20,
                            MentalStrength = 6,
                            Strength = 12
                        },
                        new
                        {
                            Id = new Guid("697d4622-b4d9-4b71-85e8-a81bbcd7c0a4"),
                            Agility = 3,
                            Dexterity = 7,
                            Endurance = 12,
                            Evasion = 3,
                            Health = 60,
                            HeroId = new Guid("e1f39f3c-0fb5-40d4-84d1-b6a46c5c0568"),
                            MentalEnergy = 24,
                            MentalStrength = 8,
                            Strength = 7
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsItDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupWestId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.NatureSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("NatureSkills");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Negotiation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("Negotiations");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Page", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Promise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsItDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Promises");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Dikani", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Dikanis");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Faegra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Faegras");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageFields", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageFields");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageForest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageForests");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageHarbor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageHarbors");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageSea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageSeas");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTown", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownGuardHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownInnTheOldMagicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownTheCentralSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownTheLibraryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MageTownGuardHillId");

                    b.HasIndex("MageTownInnTheOldMagicianId");

                    b.HasIndex("MageTownTheCentralSquareId");

                    b.HasIndex("MageTownTheLibraryId");

                    b.ToTable("MageTowns");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownGuardHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageTownGuardHills");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownInnTheOldMagician", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageTownInnTheOldMagicians");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheCentralSquare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageTownTheCentralSquares");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheLibrary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageTownTheLibraries");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTradeRoad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MageTradeRoads");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.Mageland", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageFieldsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageForestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageHarborId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageSeaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTownId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MageTradeRoadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MageFieldsId");

                    b.HasIndex("MageForestId");

                    b.HasIndex("MageHarborId");

                    b.HasIndex("MageSeaId");

                    b.HasIndex("MageTownId");

                    b.HasIndex("MageTradeRoadId");

                    b.ToTable("Magelands");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.NorthernNomads", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("NorthernNomads");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.OutlawTerritory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("OutlawTerritories");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Redimel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DikaniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FaegraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MagelandsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NorthernNomadsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutlawTerritoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SouthernNomadsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StincumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheBigCityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheEmpireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheForestTribesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheHigherOnesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheHorsePeopleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheHuntersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheIslandersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheOldKingdomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ThePirateDomainsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheShadowWorldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheTradeLeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TheWastelandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TumpridadamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DikaniId");

                    b.HasIndex("FaegraId");

                    b.HasIndex("MagelandsId");

                    b.HasIndex("NorthernNomadsId");

                    b.HasIndex("OutlawTerritoryId");

                    b.HasIndex("SouthernNomadsId");

                    b.HasIndex("StincumId");

                    b.HasIndex("TheBigCityId");

                    b.HasIndex("TheEmpireId");

                    b.HasIndex("TheForestTribesId");

                    b.HasIndex("TheHigherOnesId");

                    b.HasIndex("TheHorsePeopleId");

                    b.HasIndex("TheHuntersId");

                    b.HasIndex("TheIslandersId");

                    b.HasIndex("TheOldKingdomId");

                    b.HasIndex("ThePirateDomainsId");

                    b.HasIndex("TheShadowWorldId");

                    b.HasIndex("TheTradeLeagueId");

                    b.HasIndex("TheWastelandId");

                    b.HasIndex("TumpridadamId");

                    b.ToTable("Redimels");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.SouthernNomads", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SouthernNomads");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Stincum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Stincums");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheBigCity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheBigCities");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheEmpire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheEmpires");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheForestTribes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheForestTribes");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheHigherOnes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheHigherOnes");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheHorsePeople", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheHorsePeoples");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheHunters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheHunters");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheIslanders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheIslanders");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheOldKingdom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheOldKingdoms");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.ThePirateDomains", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ThePirateDomains");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheShadowWorld", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheShadowWorlds");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheTradeLeague", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheTradeLeagues");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheWasteland", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TheWastelands");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Tumpridadam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tumpridadams");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.WorldInfoVariable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DikaniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FaegraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageFieldsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageForestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageHarborId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageSeaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageTownGuardHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageTownId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageTownInnTheOldMagicianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageTownTheCentralSquareId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageTownTheLibraryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MageTradeRoadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MagelandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NorthernNomadsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OutlawTerritoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SouthernNomadsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StincumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheBigCityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheEmpireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheForestTribesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheHigherOnesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheHorsePeopleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheHuntersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheIslandersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheOldKingdomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ThePirateDomainsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheShadowWorldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheTradeLeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TheWastelandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrueOrFalse")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TumpridadamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DikaniId");

                    b.HasIndex("FaegraId");

                    b.HasIndex("MageFieldsId");

                    b.HasIndex("MageForestId");

                    b.HasIndex("MageHarborId");

                    b.HasIndex("MageSeaId");

                    b.HasIndex("MageTownGuardHillId");

                    b.HasIndex("MageTownId");

                    b.HasIndex("MageTownInnTheOldMagicianId");

                    b.HasIndex("MageTownTheCentralSquareId");

                    b.HasIndex("MageTownTheLibraryId");

                    b.HasIndex("MageTradeRoadId");

                    b.HasIndex("MagelandId");

                    b.HasIndex("NorthernNomadsId");

                    b.HasIndex("OutlawTerritoryId");

                    b.HasIndex("RedimelId");

                    b.HasIndex("SouthernNomadsId");

                    b.HasIndex("StincumId");

                    b.HasIndex("TheBigCityId");

                    b.HasIndex("TheEmpireId");

                    b.HasIndex("TheForestTribesId");

                    b.HasIndex("TheHigherOnesId");

                    b.HasIndex("TheHorsePeopleId");

                    b.HasIndex("TheHuntersId");

                    b.HasIndex("TheIslandersId");

                    b.HasIndex("TheOldKingdomId");

                    b.HasIndex("ThePirateDomainsId");

                    b.HasIndex("TheShadowWorldId");

                    b.HasIndex("TheTradeLeagueId");

                    b.HasIndex("TheWastelandId");

                    b.HasIndex("TumpridadamId");

                    b.ToTable("WorldInfoVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ritual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Rituals");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Shield", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<string>("ShieldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e87042bf-50c0-4b73-adc5-1da34dfdcd5f"),
                            Defence = 0,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = false,
                            ShieldType = ""
                        },
                        new
                        {
                            Id = new Guid("c5b0bd9c-7840-41b4-bb71-44ab2b883c7d"),
                            Defence = 0,
                            EquipmentId = new Guid("6d6e49e8-84b4-4a11-b8f8-c1613e97479a"),
                            IsExist = false,
                            ShieldType = ""
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialCombatSkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UltimateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialCombatSkillId");

                    b.HasIndex("UltimateId");

                    b.ToTable("SpecialAbilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0"),
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            SpecialCombatSkillId = new Guid("d1d752d4-216b-4e3e-b663-6e2f5e849477"),
                            UltimateId = new Guid("0d71b738-b538-4e19-aebe-05806ab7d2fd")
                        },
                        new
                        {
                            Id = new Guid("eb521bf8-1f0e-43da-bfaf-82750308b629"),
                            HeroId = new Guid("e1f39f3c-0fb5-40d4-84d1-b6a46c5c0568"),
                            SpecialCombatSkillId = new Guid("fdd5bf1d-32c6-460d-b518-570e866f2e7a"),
                            UltimateId = new Guid("6d16ec7d-7e95-4c76-a146-7532c2c1f39e")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialCombatSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SpecialCombatSkills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1d752d4-216b-4e3e-b663-6e2f5e849477"),
                            Name = "SoldierSCS",
                            RequiredMentalEnergy = 4,
                            SkillLevel = 1,
                            SpecialAbilitiesId = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0")
                        },
                        new
                        {
                            Id = new Guid("fdd5bf1d-32c6-460d-b518-570e866f2e7a"),
                            Name = "HunterSCS",
                            RequiredMentalEnergy = 0,
                            SkillLevel = 1,
                            SpecialAbilitiesId = new Guid("eb521bf8-1f0e-43da-bfaf-82750308b629")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Spell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Talisman", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BonusIndicator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BonusPoints")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalismanType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Talismans");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.ThrowingWeapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ThrowingWeaponRange")
                        .HasColumnType("int");

                    b.Property<string>("ThrowingWeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThrowingWeapons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bcb17f68-b01e-484f-b757-7962129f95f6"),
                            Attack = 0,
                            Damage = 0,
                            Defence = 0,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = false,
                            Quantity = 0,
                            ThrowingWeaponRange = 0,
                            ThrowingWeaponType = ""
                        },
                        new
                        {
                            Id = new Guid("666c294d-c0d1-49d1-89a0-88abb3cf05fe"),
                            Attack = 9,
                            Damage = 10,
                            Defence = 1,
                            EquipmentId = new Guid("6d6e49e8-84b4-4a11-b8f8-c1613e97479a"),
                            IsExist = true,
                            Quantity = 20,
                            ThrowingWeaponRange = 4,
                            ThrowingWeaponType = "ShortBow"
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ultimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Ultimates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d71b738-b538-4e19-aebe-05806ab7d2fd"),
                            Name = "SoldierUltimate",
                            RequiredMentalEnergy = 5,
                            SkillLevel = 1,
                            SpecialAbilitiesId = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0")
                        },
                        new
                        {
                            Id = new Guid("6d16ec7d-7e95-4c76-a146-7532c2c1f39e"),
                            Name = "HunterUltimate",
                            RequiredMentalEnergy = 8,
                            SkillLevel = 1,
                            SpecialAbilitiesId = new Guid("eb521bf8-1f0e-43da-bfaf-82750308b629")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Checkpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RedimelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TimeCounter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupWestId");

                    b.HasIndex("RedimelId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItTwoHandWeapon")
                        .HasColumnType("bit");

                    b.Property<int>("WeaponRange")
                        .HasColumnType("int");

                    b.Property<string>("WeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("57006109-51e5-43e3-a8e0-8f3ece262649"),
                            Attack = 12,
                            Damage = 15,
                            Defence = 3,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = true,
                            IsItTwoHandWeapon = true,
                            WeaponRange = 3,
                            WeaponType = "TwoHand"
                        },
                        new
                        {
                            Id = new Guid("b29503f6-4955-4512-a0d9-619f16127a80"),
                            Attack = 11,
                            Damage = 10,
                            Defence = 2,
                            EquipmentId = new Guid("6d6e49e8-84b4-4a11-b8f8-c1613e97479a"),
                            IsExist = true,
                            IsItTwoHandWeapon = false,
                            WeaponRange = 2,
                            WeaponType = "OneHand"
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Baggage", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Hero", "Hero")
                        .WithMany("Baggages")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.BattleGroup", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany("BattleGroups")
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Choice", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Page", "Page")
                        .WithMany("Choices")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Armor", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Shield", "Shield")
                        .WithMany()
                        .HasForeignKey("ShieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.ThrowingWeapon", "ThrowingWeapon")
                        .WithMany()
                        .HasForeignKey("ThrowingWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armor");

                    b.Navigation("Shield");

                    b.Navigation("ThrowingWeapon");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany()
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Equipment", "Equipments")
                        .WithMany()
                        .HasForeignKey("EquipmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany("Heroes")
                        .HasForeignKey("GroupWestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Indicator", "Indicators")
                        .WithOne("Hero")
                        .HasForeignKey("redimel_server.Models.Domain.Hero", "IndicatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany()
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Equipments");

                    b.Navigation("GroupWest");

                    b.Navigation("Indicators");

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Mission", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany("Missions")
                        .HasForeignKey("GroupWestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupWest");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.NatureSkill", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("NatureSkills")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Negotiation", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany("Negotiations")
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Promise", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Hero", "Hero")
                        .WithMany("Promises")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTown", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownGuardHill", "MageTownGuardHill")
                        .WithMany()
                        .HasForeignKey("MageTownGuardHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownInnTheOldMagician", "MageTownInnTheOldMagician")
                        .WithMany()
                        .HasForeignKey("MageTownInnTheOldMagicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheCentralSquare", "MageTownTheCentralSquare")
                        .WithMany()
                        .HasForeignKey("MageTownTheCentralSquareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheLibrary", "MageTownTheLibrary")
                        .WithMany()
                        .HasForeignKey("MageTownTheLibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MageTownGuardHill");

                    b.Navigation("MageTownInnTheOldMagician");

                    b.Navigation("MageTownTheCentralSquare");

                    b.Navigation("MageTownTheLibrary");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.Mageland", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageFields", "MageFields")
                        .WithMany()
                        .HasForeignKey("MageFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageForest", "MageForest")
                        .WithMany()
                        .HasForeignKey("MageForestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageHarbor", "MageHarbor")
                        .WithMany()
                        .HasForeignKey("MageHarborId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageSea", "MageSea")
                        .WithMany()
                        .HasForeignKey("MageSeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTown", "MageTown")
                        .WithMany()
                        .HasForeignKey("MageTownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTradeRoad", "MageTradeRoad")
                        .WithMany()
                        .HasForeignKey("MageTradeRoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MageFields");

                    b.Navigation("MageForest");

                    b.Navigation("MageHarbor");

                    b.Navigation("MageSea");

                    b.Navigation("MageTown");

                    b.Navigation("MageTradeRoad");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Redimel", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Dikani", "Dikani")
                        .WithMany()
                        .HasForeignKey("DikaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Faegra", "Faegra")
                        .WithMany()
                        .HasForeignKey("FaegraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.Mageland", "Magelands")
                        .WithMany()
                        .HasForeignKey("MagelandsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.NorthernNomads", "NorthernNomads")
                        .WithMany()
                        .HasForeignKey("NorthernNomadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.OutlawTerritory", "OutlawTerritory")
                        .WithMany()
                        .HasForeignKey("OutlawTerritoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.SouthernNomads", "SouthernNomads")
                        .WithMany()
                        .HasForeignKey("SouthernNomadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Stincum", "Stincum")
                        .WithMany()
                        .HasForeignKey("StincumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheBigCity", "TheBigCity")
                        .WithMany()
                        .HasForeignKey("TheBigCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheEmpire", "TheEmpire")
                        .WithMany()
                        .HasForeignKey("TheEmpireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheForestTribes", "TheForestTribes")
                        .WithMany()
                        .HasForeignKey("TheForestTribesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheHigherOnes", "TheHigherOnes")
                        .WithMany()
                        .HasForeignKey("TheHigherOnesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheHorsePeople", "TheHorsePeople")
                        .WithMany()
                        .HasForeignKey("TheHorsePeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheHunters", "TheHunters")
                        .WithMany()
                        .HasForeignKey("TheHuntersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheIslanders", "TheIslanders")
                        .WithMany()
                        .HasForeignKey("TheIslandersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheOldKingdom", "TheOldKingdom")
                        .WithMany()
                        .HasForeignKey("TheOldKingdomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.ThePirateDomains", "ThePirateDomains")
                        .WithMany()
                        .HasForeignKey("ThePirateDomainsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheShadowWorld", "TheShadowWorld")
                        .WithMany()
                        .HasForeignKey("TheShadowWorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheTradeLeague", "TheTradeLeague")
                        .WithMany()
                        .HasForeignKey("TheTradeLeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheWasteland", "TheWasteland")
                        .WithMany()
                        .HasForeignKey("TheWastelandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Tumpridadam", "Tumpridadam")
                        .WithMany()
                        .HasForeignKey("TumpridadamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dikani");

                    b.Navigation("Faegra");

                    b.Navigation("Magelands");

                    b.Navigation("NorthernNomads");

                    b.Navigation("OutlawTerritory");

                    b.Navigation("SouthernNomads");

                    b.Navigation("Stincum");

                    b.Navigation("TheBigCity");

                    b.Navigation("TheEmpire");

                    b.Navigation("TheForestTribes");

                    b.Navigation("TheHigherOnes");

                    b.Navigation("TheHorsePeople");

                    b.Navigation("TheHunters");

                    b.Navigation("TheIslanders");

                    b.Navigation("TheOldKingdom");

                    b.Navigation("ThePirateDomains");

                    b.Navigation("TheShadowWorld");

                    b.Navigation("TheTradeLeague");

                    b.Navigation("TheWasteland");

                    b.Navigation("Tumpridadam");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.WorldInfoVariable", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Dikani", null)
                        .WithMany("DikaniVariables")
                        .HasForeignKey("DikaniId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Faegra", null)
                        .WithMany("FaegraVariables")
                        .HasForeignKey("FaegraId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageFields", null)
                        .WithMany("MageFieldsVariables")
                        .HasForeignKey("MageFieldsId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageForest", null)
                        .WithMany("MageForestVariables")
                        .HasForeignKey("MageForestId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageHarbor", null)
                        .WithMany("MageHarborVariables")
                        .HasForeignKey("MageHarborId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageSea", null)
                        .WithMany("MageSeaVariables")
                        .HasForeignKey("MageSeaId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownGuardHill", null)
                        .WithMany("MageTownGuardHillVariables")
                        .HasForeignKey("MageTownGuardHillId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTown", null)
                        .WithMany("MageTownVariables")
                        .HasForeignKey("MageTownId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownInnTheOldMagician", null)
                        .WithMany("MageTownOldMagicianVariables")
                        .HasForeignKey("MageTownInnTheOldMagicianId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheCentralSquare", null)
                        .WithMany("MageTownTheCentralSquareVariables")
                        .HasForeignKey("MageTownTheCentralSquareId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheLibrary", null)
                        .WithMany("MageTownTheLibraryVariables")
                        .HasForeignKey("MageTownTheLibraryId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTradeRoad", null)
                        .WithMany("MageTradeRoadVariables")
                        .HasForeignKey("MageTradeRoadId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.Mageland", null)
                        .WithMany("MagelandVariables")
                        .HasForeignKey("MagelandId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.NorthernNomads", null)
                        .WithMany("NorthernNomadsVariables")
                        .HasForeignKey("NorthernNomadsId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.OutlawTerritory", null)
                        .WithMany("OutlawTerritoryVariables")
                        .HasForeignKey("OutlawTerritoryId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Redimel", null)
                        .WithMany("RedimelVariables")
                        .HasForeignKey("RedimelId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.SouthernNomads", null)
                        .WithMany("SouthernNomadsVariables")
                        .HasForeignKey("SouthernNomadsId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Stincum", null)
                        .WithMany("StincumVariables")
                        .HasForeignKey("StincumId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheBigCity", null)
                        .WithMany("TheBigCityVariables")
                        .HasForeignKey("TheBigCityId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheEmpire", null)
                        .WithMany("TheEmpireVariables")
                        .HasForeignKey("TheEmpireId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheForestTribes", null)
                        .WithMany("TheForestTribesVariables")
                        .HasForeignKey("TheForestTribesId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheHigherOnes", null)
                        .WithMany("TheHigherOnesVariables")
                        .HasForeignKey("TheHigherOnesId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheHorsePeople", null)
                        .WithMany("TheHorsePeopleVariables")
                        .HasForeignKey("TheHorsePeopleId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheHunters", null)
                        .WithMany("TheHuntersVariables")
                        .HasForeignKey("TheHuntersId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheIslanders", null)
                        .WithMany("TheIslandersVariables")
                        .HasForeignKey("TheIslandersId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheOldKingdom", null)
                        .WithMany("TheOldKingdomVariables")
                        .HasForeignKey("TheOldKingdomId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.ThePirateDomains", null)
                        .WithMany("ThePirateDomainsVariables")
                        .HasForeignKey("ThePirateDomainsId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheShadowWorld", null)
                        .WithMany("TheShadowWorldVariables")
                        .HasForeignKey("TheShadowWorldId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheTradeLeague", null)
                        .WithMany("TheTradeLeagueVariables")
                        .HasForeignKey("TheTradeLeagueId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.TheWasteland", null)
                        .WithMany("TheWastelandVariables")
                        .HasForeignKey("TheWastelandId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Tumpridadam", null)
                        .WithMany("TumpridadamVariables")
                        .HasForeignKey("TumpridadamId");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ritual", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("Rituals")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialCombatSkill", "SpecialCombatSkill")
                        .WithMany()
                        .HasForeignKey("SpecialCombatSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Ultimate", "Ultimate")
                        .WithMany()
                        .HasForeignKey("UltimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialCombatSkill");

                    b.Navigation("Ultimate");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Spell", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("Spells")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Talisman", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Equipment", "Equipment")
                        .WithMany("Talismans")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.User", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany()
                        .HasForeignKey("GroupWestId");

                    b.HasOne("redimel_server.Models.Domain.RedimelDomain.Redimel", "Redimel")
                        .WithMany()
                        .HasForeignKey("RedimelId");

                    b.Navigation("GroupWest");

                    b.Navigation("Redimel");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.AditionalPoint", b =>
                {
                    b.Navigation("BattleGroups");

                    b.Navigation("Negotiations");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.Navigation("Talismans");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.Navigation("Heroes");

                    b.Navigation("Missions");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.Navigation("Baggages");

                    b.Navigation("Promises");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Indicator", b =>
                {
                    b.Navigation("Hero")
                        .IsRequired();
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Page", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Dikani", b =>
                {
                    b.Navigation("DikaniVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Faegra", b =>
                {
                    b.Navigation("FaegraVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageFields", b =>
                {
                    b.Navigation("MageFieldsVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageForest", b =>
                {
                    b.Navigation("MageForestVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageHarbor", b =>
                {
                    b.Navigation("MageHarborVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageSea", b =>
                {
                    b.Navigation("MageSeaVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTown", b =>
                {
                    b.Navigation("MageTownVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownGuardHill", b =>
                {
                    b.Navigation("MageTownGuardHillVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownInnTheOldMagician", b =>
                {
                    b.Navigation("MageTownOldMagicianVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheCentralSquare", b =>
                {
                    b.Navigation("MageTownTheCentralSquareVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTownTheLibrary", b =>
                {
                    b.Navigation("MageTownTheLibraryVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.MageTradeRoad", b =>
                {
                    b.Navigation("MageTradeRoadVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.MagelandDomain.Mageland", b =>
                {
                    b.Navigation("MagelandVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.NorthernNomads", b =>
                {
                    b.Navigation("NorthernNomadsVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.OutlawTerritory", b =>
                {
                    b.Navigation("OutlawTerritoryVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Redimel", b =>
                {
                    b.Navigation("RedimelVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.SouthernNomads", b =>
                {
                    b.Navigation("SouthernNomadsVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Stincum", b =>
                {
                    b.Navigation("StincumVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheBigCity", b =>
                {
                    b.Navigation("TheBigCityVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheEmpire", b =>
                {
                    b.Navigation("TheEmpireVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheForestTribes", b =>
                {
                    b.Navigation("TheForestTribesVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheHigherOnes", b =>
                {
                    b.Navigation("TheHigherOnesVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheHorsePeople", b =>
                {
                    b.Navigation("TheHorsePeopleVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheHunters", b =>
                {
                    b.Navigation("TheHuntersVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheIslanders", b =>
                {
                    b.Navigation("TheIslandersVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheOldKingdom", b =>
                {
                    b.Navigation("TheOldKingdomVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.ThePirateDomains", b =>
                {
                    b.Navigation("ThePirateDomainsVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheShadowWorld", b =>
                {
                    b.Navigation("TheShadowWorldVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheTradeLeague", b =>
                {
                    b.Navigation("TheTradeLeagueVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.TheWasteland", b =>
                {
                    b.Navigation("TheWastelandVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.RedimelDomain.Tumpridadam", b =>
                {
                    b.Navigation("TumpridadamVariables");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.Navigation("NatureSkills");

                    b.Navigation("Rituals");

                    b.Navigation("Spells");
                });
#pragma warning restore 612, 618
        }
    }
}
