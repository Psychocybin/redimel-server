// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using redimel_server.Data;

#nullable disable

namespace redimel_server.Migrations
{
    [DbContext(typeof(RedimelServerDbContext))]
    [Migration("20230712174735_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("redimel_server.Models.Domain.Ability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Acrobatics")
                        .HasColumnType("bit");

                    b.Property<bool>("Archery")
                        .HasColumnType("bit");

                    b.Property<bool>("BreakingLocks")
                        .HasColumnType("bit");

                    b.Property<bool>("Climbing")
                        .HasColumnType("bit");

                    b.Property<bool>("Diplomacy")
                        .HasColumnType("bit");

                    b.Property<bool>("Elusion")
                        .HasColumnType("bit");

                    b.Property<bool>("Guile")
                        .HasColumnType("bit");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Melee")
                        .HasColumnType("bit");

                    b.Property<bool>("NatureSkills")
                        .HasColumnType("bit");

                    b.Property<bool>("Observation")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisonousNeedles")
                        .HasColumnType("bit");

                    b.Property<bool>("Rituals")
                        .HasColumnType("bit");

                    b.Property<bool>("SecretKnowledge")
                        .HasColumnType("bit");

                    b.Property<bool>("ShieldBearer")
                        .HasColumnType("bit");

                    b.Property<bool>("Skill")
                        .HasColumnType("bit");

                    b.Property<bool>("Sneak")
                        .HasColumnType("bit");

                    b.Property<bool>("Spells")
                        .HasColumnType("bit");

                    b.Property<bool>("Stimulants")
                        .HasColumnType("bit");

                    b.Property<bool>("Survival")
                        .HasColumnType("bit");

                    b.Property<bool>("ThrowingKnives")
                        .HasColumnType("bit");

                    b.Property<bool>("Transformation")
                        .HasColumnType("bit");

                    b.Property<bool>("Traps")
                        .HasColumnType("bit");

                    b.Property<bool>("WaterCycle")
                        .HasColumnType("bit");

                    b.Property<bool>("Wrestling")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Abilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd5a3e48-5eb4-49fa-a24d-3c3e861f22b3"),
                            Acrobatics = false,
                            Archery = false,
                            BreakingLocks = false,
                            Climbing = false,
                            Diplomacy = false,
                            Elusion = false,
                            Guile = false,
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            Melee = false,
                            NatureSkills = false,
                            Observation = false,
                            PoisonousNeedles = false,
                            Rituals = false,
                            SecretKnowledge = false,
                            ShieldBearer = false,
                            Skill = false,
                            Sneak = false,
                            Spells = false,
                            Stimulants = false,
                            Survival = false,
                            ThrowingKnives = false,
                            Transformation = false,
                            Traps = false,
                            WaterCycle = false,
                            Wrestling = true
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.AditionalPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cover")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ImportantInformation")
                        .HasColumnType("int");

                    b.Property<int>("Morals")
                        .HasColumnType("int");

                    b.Property<int>("SlainMonsters")
                        .HasColumnType("int");

                    b.Property<int>("TeamGame")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AditionalPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8db8e341-9d6e-42e8-8504-45b5f56eac5f"),
                            Cover = 2,
                            GroupWestId = new Guid("44a06217-58ec-4dce-bb7d-5a951e2bef9e"),
                            ImportantInformation = 0,
                            Morals = 2,
                            SlainMonsters = 0,
                            TeamGame = 0
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Armor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArmorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Armors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05bee6ad-3556-4d28-b537-ab3fed69ea26"),
                            ArmorType = "FullPlate",
                            Defence = 11,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = true
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Baggage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Baggages");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.BattleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("BattleGroups");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArmorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Knife")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicPack")
                        .HasColumnType("bit");

                    b.Property<int>("MoneyBag")
                        .HasColumnType("int");

                    b.Property<bool>("Poison")
                        .HasColumnType("bit");

                    b.Property<Guid>("ShieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SmokeBall")
                        .HasColumnType("bit");

                    b.Property<Guid>("ThrowingWeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("ShieldId");

                    b.HasIndex("ThrowingWeaponId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            ArmorId = new Guid("05bee6ad-3556-4d28-b537-ab3fed69ea26"),
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            Knife = true,
                            MedicPack = true,
                            MoneyBag = 100,
                            Poison = false,
                            ShieldId = new Guid("e87042bf-50c0-4b73-adc5-1da34dfdcd5f"),
                            SmokeBall = true,
                            ThrowingWeaponId = new Guid("bcb17f68-b01e-484f-b757-7962129f95f6"),
                            WeaponId = new Guid("57006109-51e5-43e3-a8e0-8f3ece262649")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActualMission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("GroupWests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44a06217-58ec-4dce-bb7d-5a951e2bef9e"),
                            ActualMission = "",
                            AditionalPointsId = new Guid("8db8e341-9d6e-42e8-8504-45b5f56eac5f")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BaggageCapacity")
                        .HasColumnType("float");

                    b.Property<Guid>("EquipmentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HeroClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndicatorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("EquipmentsId");

                    b.HasIndex("GroupWestId");

                    b.HasIndex("IndicatorsId");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Heroes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            AbilityId = new Guid("cd5a3e48-5eb4-49fa-a24d-3c3e861f22b3"),
                            BaggageCapacity = 60.0,
                            EquipmentsId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            GroupWestId = new Guid("44a06217-58ec-4dce-bb7d-5a951e2bef9e"),
                            HeroClass = "Barbarian",
                            IndicatorsId = new Guid("1aa43831-d5b0-4299-9585-a98c527ef9f8"),
                            Name = "Vranko",
                            SpecialAbilityId = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Indicator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Agility")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Endurance")
                        .HasColumnType("int");

                    b.Property<int>("Evasion")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("MentalStrength")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Indicators");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1aa43831-d5b0-4299-9585-a98c527ef9f8"),
                            Agility = 3,
                            Dexterity = 8,
                            Endurance = 6,
                            Evasion = 5,
                            Health = 70,
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            MentalEnergy = 20,
                            MentalStrength = 6,
                            Strength = 12
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupWestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsItDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupWestId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.NatureSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("NatureSkills");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Negotiation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AditionalPointsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AditionalPointsId");

                    b.ToTable("Negotiations");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Promise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsItDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Promises");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ritual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Rituals");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Shield", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<string>("ShieldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shields");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e87042bf-50c0-4b73-adc5-1da34dfdcd5f"),
                            Defence = 0,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = false,
                            ShieldType = ""
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HeroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialCombatSkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UltimateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialCombatSkillId");

                    b.HasIndex("UltimateId");

                    b.ToTable("SpecialAbilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0"),
                            HeroId = new Guid("a9542e10-30a3-45a8-b2ea-cacef3df468a"),
                            SpecialCombatSkillId = new Guid("d1d752d4-216b-4e3e-b663-6e2f5e849477"),
                            UltimateId = new Guid("0d71b738-b538-4e19-aebe-05806ab7d2fd")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialCombatSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SpecialCombatSkills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1d752d4-216b-4e3e-b663-6e2f5e849477"),
                            Name = "SoldierSCS",
                            RequiredMentalEnergy = 4,
                            SkillLevel = 1,
                            SpecialAbilitiesId = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Spell", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecialAbilityId");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Talisman", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BonusIndicator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BonusPoints")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalismanType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Talismans");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.ThrowingWeapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ThrowingWeaponRange")
                        .HasColumnType("int");

                    b.Property<string>("ThrowingWeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThrowingWeapons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bcb17f68-b01e-484f-b757-7962129f95f6"),
                            Attack = 0,
                            Damage = 0,
                            Defence = 0,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = false,
                            Quantity = 0,
                            ThrowingWeaponRange = 0,
                            ThrowingWeaponType = ""
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ultimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredMentalEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("SpecialAbilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Ultimates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d71b738-b538-4e19-aebe-05806ab7d2fd"),
                            Name = "SoldierUltimate",
                            RequiredMentalEnergy = 5,
                            SkillLevel = 1,
                            SpecialAbilitiesId = new Guid("bf99b385-56ee-49f9-b7fe-36cc88f829d0")
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExist")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItTwoHandWeapon")
                        .HasColumnType("bit");

                    b.Property<int>("WeaponRange")
                        .HasColumnType("int");

                    b.Property<string>("WeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("57006109-51e5-43e3-a8e0-8f3ece262649"),
                            Attack = 12,
                            Damage = 15,
                            Defence = 3,
                            EquipmentId = new Guid("6f58f2e9-7788-43f8-abe1-06a6d96a537b"),
                            IsExist = true,
                            IsItTwoHandWeapon = true,
                            WeaponRange = 3,
                            WeaponType = "TwoHand"
                        });
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Baggage", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Hero", "Hero")
                        .WithMany("Baggages")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.BattleGroup", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany("BattleGroups")
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Armor", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Shield", "Shield")
                        .WithMany()
                        .HasForeignKey("ShieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.ThrowingWeapon", "ThrowingWeapon")
                        .WithMany()
                        .HasForeignKey("ThrowingWeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armor");

                    b.Navigation("Shield");

                    b.Navigation("ThrowingWeapon");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany()
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Equipment", "Equipments")
                        .WithMany()
                        .HasForeignKey("EquipmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany("Heroes")
                        .HasForeignKey("GroupWestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Indicator", "Indicators")
                        .WithMany()
                        .HasForeignKey("IndicatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany()
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Equipments");

                    b.Navigation("GroupWest");

                    b.Navigation("Indicators");

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Mission", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.GroupWest", "GroupWest")
                        .WithMany("Missions")
                        .HasForeignKey("GroupWestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupWest");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.NatureSkill", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("NatureSkills")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Negotiation", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.AditionalPoint", "AditionalPoints")
                        .WithMany("Negotiations")
                        .HasForeignKey("AditionalPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditionalPoints");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Promise", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Hero", "Hero")
                        .WithMany("Promises")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Ritual", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("Rituals")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialCombatSkill", "SpecialCombatSkill")
                        .WithMany()
                        .HasForeignKey("SpecialCombatSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redimel_server.Models.Domain.Ultimate", "Ultimate")
                        .WithMany()
                        .HasForeignKey("UltimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialCombatSkill");

                    b.Navigation("Ultimate");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Spell", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.SpecialAbility", "SpecialAbility")
                        .WithMany("Spells")
                        .HasForeignKey("SpecialAbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialAbility");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Talisman", b =>
                {
                    b.HasOne("redimel_server.Models.Domain.Equipment", "Equipment")
                        .WithMany("Talismans")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.AditionalPoint", b =>
                {
                    b.Navigation("BattleGroups");

                    b.Navigation("Negotiations");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Equipment", b =>
                {
                    b.Navigation("Talismans");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.GroupWest", b =>
                {
                    b.Navigation("Heroes");

                    b.Navigation("Missions");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.Hero", b =>
                {
                    b.Navigation("Baggages");

                    b.Navigation("Promises");
                });

            modelBuilder.Entity("redimel_server.Models.Domain.SpecialAbility", b =>
                {
                    b.Navigation("NatureSkills");

                    b.Navigation("Rituals");

                    b.Navigation("Spells");
                });
#pragma warning restore 612, 618
        }
    }
}
